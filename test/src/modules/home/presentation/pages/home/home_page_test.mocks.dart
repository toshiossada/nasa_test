// Mocks generated by Mockito 5.4.5 from annotations
// in eclipse/test/src/modules/home/presentation/pages/home/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:eclipse/src/modules/home/domain/entities/apod_entity.dart'
    as _i3;
import 'package:eclipse/src/modules/home/domain/repositories/nasa_repository.dart'
    as _i2;
import 'package:eclipse/src/modules/home/domain/usecases/get_favorites_usecase.dart'
    as _i4;
import 'package:eclipse/src/modules/home/domain/usecases/get_media_od_day_usecase.dart'
    as _i6;
import 'package:eclipse/src/modules/home/domain/usecases/save_favorites_usecase.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNasaRepository_0 extends _i1.SmartFake
    implements _i2.NasaRepository {
  _FakeNasaRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApodEntity_1 extends _i1.SmartFake implements _i3.ApodEntity {
  _FakeApodEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetFavoritesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFavoritesUsecase extends _i1.Mock
    implements _i4.GetFavoritesUsecase {
  @override
  _i2.NasaRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.NasaRepository);

  @override
  _i5.Future<List<_i3.ApodEntity>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<List<_i3.ApodEntity>>.value(<_i3.ApodEntity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.ApodEntity>>.value(<_i3.ApodEntity>[]),
      ) as _i5.Future<List<_i3.ApodEntity>>);
}

/// A class which mocks [GetMediaOfDayUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMediaOfDayUsecase extends _i1.Mock
    implements _i6.GetMediaOfDayUsecase {
  @override
  _i2.NasaRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.NasaRepository);

  @override
  _i5.Future<_i3.ApodEntity> call(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [date],
        ),
        returnValue: _i5.Future<_i3.ApodEntity>.value(_FakeApodEntity_1(
          this,
          Invocation.method(
            #call,
            [date],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.ApodEntity>.value(_FakeApodEntity_1(
          this,
          Invocation.method(
            #call,
            [date],
          ),
        )),
      ) as _i5.Future<_i3.ApodEntity>);
}

/// A class which mocks [SaveFavoritesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveFavoritesUsecase extends _i1.Mock
    implements _i7.SaveFavoritesUsecase {
  @override
  _i2.NasaRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeNasaRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.NasaRepository);

  @override
  _i5.Future<void> call({
    required _i3.ApodEntity? apod,
    required bool? delete,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #apod: apod,
            #delete: delete,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
